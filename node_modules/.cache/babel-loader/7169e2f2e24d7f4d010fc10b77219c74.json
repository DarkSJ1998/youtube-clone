{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\Desktop\\\\Upgrad\\\\practice-react\\\\youtube-clone\\\\src\\\\components\\\\comments.js\";\nimport React, { Component } from 'react';\nimport './comments.css';\n\"use strict\";\n\nfunction hideWarning() {\n  document.getElementById('no_go').style.display = 'none';\n}\n\nfunction showWarning() {\n  document.getElementById('no_go').style.display = 'block';\n  document.getElementById('no_go').innerHTML = '<strong>Warning:</strong> App will not work if local storage is disabled or unsupported.';\n  console.warn('App will not work if local storage is disabled or unsupported.');\n}\n\nfunction supportsLocalStorage() {\n  return typeof localStorage !== 'undefined';\n}\n\nfunction getComments() {\n  return JSON.parse(localStorage.getItem('comments')) || [];\n}\n\nfunction saveComment(comments, commentStr, action) {\n  if (!commentStr && comments.indexOf(commentStr) < 0) {\n    action(err);\n  }\n\n  action(undefined, commentStr);\n}\n\nfunction appendToStream(stream, str, index) {\n  var li = document.createElement('LI');\n  li.setAttribute('data-index', index);\n  li.innerHTML = str;\n  stream.appendChild(li);\n}\n\nfunction loadComments(stream) {\n  var comments = getComments();\n\n  if (comments) {\n    for (var i = 0; i < comments.length; i++) {\n      appendToStream(stream, comments[i], i);\n    }\n  }\n}\n\nfunction clearComments(stream) {\n  localStorage.removeItem('comments');\n  stream.innerHTML = '';\n}\n\nif (supportsLocalStorage()) {\n  initApp();\n} else {\n  showWarning();\n}\n\nfunction initApp() {\n  hideWarning();\n  var commentForm = document.getElementById('comment-form'),\n      commentList = document.getElementById('comment-stream'),\n      commentInput = document.getElementById('comment-input'),\n      removeAll = document.getElementById('remove-all');\n  loadComments(commentList);\n  commentForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n    var commStr = commentInput.value,\n        comments = getComments();\n    saveComment(comments, commStr, function (err, value) {\n      if (err) {\n        return;\n      }\n\n      comments.push(value);\n      localStorage.setItem('comments', JSON.stringify(comments));\n      appendToStream(commentList, commStr);\n      commentInput.value = '';\n    });\n  }, true);\n}\n\nclass Comments extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"warning\",\n      id: \"no_go\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"commentbox-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"commentbox\"), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"comment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"comment-input\",\n      className: \"comment-input\",\n      placeholder: \"Thoughts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      className: \"comment-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      id: \"comment-stream\",\n      className: \"comment-stream\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\john\\Desktop\\Upgrad\\practice-react\\youtube-clone\\src\\components\\comments.js"],"names":["React","Component","hideWarning","document","getElementById","style","display","showWarning","innerHTML","console","warn","supportsLocalStorage","localStorage","getComments","JSON","parse","getItem","saveComment","comments","commentStr","action","indexOf","err","undefined","appendToStream","stream","str","index","li","createElement","setAttribute","appendChild","loadComments","i","length","clearComments","removeItem","initApp","commentForm","commentList","commentInput","removeAll","addEventListener","event","preventDefault","commStr","value","push","setItem","stringify","Comments","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './comments.css';\r\n\"use strict\";\r\n\r\nfunction hideWarning() {\r\n  document.getElementById('no_go').style.display = 'none';\r\n}\r\n\r\nfunction showWarning() {\r\n  document.getElementById('no_go').style.display = 'block';\r\n  document.getElementById('no_go').innerHTML = '<strong>Warning:</strong> App will not work if local storage is disabled or unsupported.';\r\n  console.warn('App will not work if local storage is disabled or unsupported.');\r\n}\r\n\r\nfunction supportsLocalStorage() {\r\n  return typeof localStorage !== 'undefined';\r\n}\r\n\r\nfunction getComments() {\r\n  return JSON.parse(localStorage.getItem('comments')) || [];\r\n}\r\n\r\nfunction saveComment(comments, commentStr, action) {\r\n  if (!commentStr && comments.indexOf(commentStr) < 0) {\r\n    action(err);\r\n  }\r\n\r\n  action(undefined, commentStr);\r\n}\r\n\r\nfunction appendToStream(stream, str, index) {\r\n  var li = document.createElement('LI');\r\n  li.setAttribute('data-index', index);\r\n  li.innerHTML = str;\r\n  stream.appendChild(li);\r\n}\r\n\r\nfunction loadComments(stream) {\r\n  var comments = getComments();\r\n\r\n  if (comments) {\r\n    for (var i = 0; i < comments.length; i++) {\r\n      appendToStream(stream, comments[i], i);\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearComments(stream) {\r\n  localStorage.removeItem('comments');\r\n  stream.innerHTML = '';\r\n}\r\n\r\nif (supportsLocalStorage()) {\r\n  initApp();\r\n} else {\r\n  showWarning();\r\n}\r\n\r\nfunction initApp() {\r\n  hideWarning();\r\n  var commentForm = document.getElementById('comment-form'),\r\n      commentList = document.getElementById('comment-stream'),\r\n      commentInput = document.getElementById('comment-input'),\r\n      removeAll = document.getElementById('remove-all');\r\n  loadComments(commentList);\r\n  commentForm.addEventListener('submit', function (event) {\r\n    event.preventDefault();\r\n    var commStr = commentInput.value,\r\n        comments = getComments();\r\n    saveComment(comments, commStr, function (err, value) {\r\n      if (err) {\r\n        return;\r\n      }\r\n\r\n      comments.push(value);\r\n      localStorage.setItem('comments', JSON.stringify(comments));\r\n      appendToStream(commentList, commStr);\r\n      commentInput.value = '';\r\n    });\r\n  }, true);\r\n}\r\nclass Comments extends Component {\r\n    render() { \r\n        return (  \r\n            <div>\r\n            <div class=\"warning\" id=\"no_go\"></div>\r\n            <div className=\"commentbox-app\">\r\n            <div className=\"container\">\r\n            <h1 className=\"heading\">commentbox</h1>\r\n            <div className=\"clearfix\">\r\n            <form id=\"comment-form\">\r\n            <input type=\"text\" id=\"comment-input\" className=\"comment-input\" placeholder=\"Thoughts\"/>\r\n            <input type=\"submit\" value=\"Post\" className=\"comment-btn\"/>\r\n            </form>\r\n            </div>\r\n            <ul id=\"comment-stream\" className=\"comment-stream\">\r\n            </ul>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}